View(alive_data_useme)
#Cutting the data frame down so my computer doesn't crash and ruin my life
alive_data_useme <- alive_data[, c("individual", "species_num",
"species", "days_survived")] %>% alive_data[!duplicated(alive_data),]
#Cutting the data frame down so my computer doesn't crash and ruin my life
alive_data_useme <- alive_data[, c("individual", "species_num",
"species", "days_survived")] %>% alive_data[!duplicated(alive_data$individual),]
#Cutting the data frame down so my computer doesn't crash and ruin my life
alive_data_useme <- alive_data[, c("individual", "species_num",
"species", "days_survived")]
duplicated(alive_data_useme)
%>% alive_data[!duplicated(alive_data_useme$individual),]
alive_data[!duplicated(alive_data_useme$individual),]
View(alive_data_useme)
alive_data_useme[!duplicated(alive_data_useme$individual),]
Data_full <- read_csv("Data/Data_full.csv")
#I want to make the data long so that all measurements, stages, and lengths are in single categories and are associated with their dates. This chunk will make measure instance and date of measurement.
#data_long <- Data_full %>% pivot_longer(cols=-c(individual, treatment_group, species_num, species, stage_1, mass_1, length_1, stage_2, mass_2, length_2, stage_3, mass_3, length_3, stage_4, mass_4, length_4, stage_5, mass_5, length_5, `6/15/2021`, `6/16/2021`, `6/17/2021`, `6/18/2021`, `6/19/2021`, `6/20/2021`, `6/21/2021`, `6/22/2021`, `6/23/2021`, `6/24/2021`, `6/25/2021`, `6/26/2021`, `6/27/2021`, `6/28/2021`, `6/29/2021`, `6/30/2021`, `7/1/2021`, `7/2/2021`, `7/3/2021`, `7/4/2021`, `7/5/2021`, `7/6/2021`, `7/7/2021`, `7/8/2021`, `7/9/2021`, `7/10/2021`, `7/11/2021`, `7/12/2021`, `7/13/2021`, `7/14/2021`, `7/15/2021`, `7/16/2021`, `7/17/2021`, `7/18/2021`, `7/19/2021`, `7/20/2021`, `7/21/2021`, `7/22/2021`, `7/23/2021`, `7/24/2021`, `7/25/2021`, `7/26/2021`, `7/27/2021`, `7/28/2021`, `7/29/2021`, `7/30/2021`, `7/31/2021`, `8/1/2021`, `8/2/2021`, `8/3/2021`, `8/4/2021`, `8/5/2021`, `8/6/2021`, `8/7/2021`, `8/8/2021`, `8/9/2021`, `8/10/2021`, `8/11/2021`, `8/12/2021`, `8/13/2021`, `8/14/2021`, `8/15/2021`, `8/16/2021`, `8/17/2021`, `8/18/2021`, `8/19/2021`, `8/20/2021`, `8/21/2021`, `8/22/2021`, `8/23/2021`, `8/24/2021`, `8/25/2021`, `8/26/2021`, `8/27/2021`, `8/28/2021`, `8/29/2021`, `8/30/2021`, `8/31/2021`, `9/1/2021`, `9/2/2021`, `9/3/2021`, `9/4/2021`, `9/5/2021`, `9/6/2021`, `9/7/2021`, `9/8/2021`, `9/9/2021`, `9/10/2021`, `9/11/2021`, `9/12/2021`, `9/13/2021`), names_to="measure_instance", values_to="measure_date")
#Now I want to combine all alive dates and alive status to cut down on colums
#data_longer <- data_long %>% pivot_longer(cols=-c(individual, treatment_group, species_num, species, stage_1, mass_1, length_1, stage_2, mass_2, length_2, stage_3, mass_3, length_3, stage_4, mass_4, length_4, stage_5, mass_5, length_5, measure_instance, measure_date), names_to="alive_date", values_to="alive_status")
#Now I want to collapse the mass measures
#data_longer_2 <- data_longer %>% pivot_longer(cols=-c(individual, treatment_group, species_num, species, stage_1, length_1, stage_2, length_2, stage_3, length_3, stage_4, length_4, stage_5, length_5, measure_instance, measure_date, alive_date, alive_status), names_to="mass_instance", values_to="mass")
#Now I want to collapse stage measures
#data_longer_3 <- data_longer_2 %>% pivot_longer(cols=-c(individual, treatment_group, species_num, species, length_1, length_2, length_3, length_4, length_5, measure_instance, measure_date, alive_date, alive_status, mass_instance, mass), names_to="stage_instance", values_to="stage")
#Now collapse length
#data_longest <- data_longer_3 %>% pivot_longer(cols=-c(individual, treatment_group, species_num, species, measure_instance, measure_date, alive_date, alive_status, mass_instance, mass, stage_instance, stage), names_to="length_instance", values_to="length")
#Wait I think I messed up
data_guess <- Data_full %>% pivot_longer(cols=-c(individual, treatment_group, species_num, species, stage_1, mass_1, length_1, stage_2, mass_2, length_2, stage_3, mass_3, length_3, stage_4, mass_4, length_4, stage_5, mass_5, length_5, m_date1, m_date2, m_date3, m_date4, m_date5), names_to="date_status", values_to="alive_status")
#rename
data <- data_guess
#Adding a column for total days each individual survived
alive_data <- data %>% group_by(individual) %>%  mutate(days_survived = sum(alive_status))
#Cutting the data frame down so my computer doesn't crash and ruin my life
alive_data_useme <- alive_data[, c("individual", "species_num",
"species", "days_survived")]
#Okay really use this one!
alive_data_smol <- alive_data_useme[!duplicated(alive_data_useme$individual),]
#Adding a column for total days each individual survived
alive_data <- data_guess %>% group_by(individual) %>%  mutate(days_survived = sum(alive_status))
#Cutting the data frame down so my computer doesn't crash and ruin my life
alive_data_useme <- alive_data[, c("individual", "species_num",
"species", "days_survived")]
#Okay really use this one!
alive_data_smol <- alive_data_useme[!duplicated(alive_data_useme$individual),]
#Okay really use this one!
alive_data_smol <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>% view()
#Okay really use this one!
reak_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>% view()
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
x_sim <- real_data_alive$days_survived
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>% view()
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>% view()
N=1000 #Number of simulations
prior_sim <- tibble(a = rnorm(N, 10, 5),
b = rnorm(N, 2, 0.5),
sigma = rexp(N, 1),
sim = 1:N)
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
x_sim <- real_data_alive$days_survived
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = x_sim) %>%    # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim") +
# scale_y_log10() +
NULL
prior_sim <- tibble(a = rnorm(N, 1, 0.5),
b = rnorm(N, 2, 0.5),
sigma = rexp(N, 1),
sim = 1:N)
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
x_sim <- real_data_alive$days_survived
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = x_sim) %>%    # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim") +
# scale_y_log10() +
NULL
prior_sim <- tibble(a = rnorm(N, 0.5, 0.5),
b = rnorm(N, 1, 0.5),
sigma = rexp(N, 1),
sim = 1:N)
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
x_sim <- real_data_alive$days_survived
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = x_sim) %>%    # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim", x=days) +
# scale_y_log10() +
NULL
labs(y = "sim", x="days"") +
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim", x="days") +
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim", x="days")
prior_sim <- tibble(a = rnorm(N, 0.25, 0.15),
b = rnorm(N, 0.5, 0.25),
sigma = rexp(N, 1),
sim = 1:N)
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
x_sim <- real_data_alive$days_survived
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = x_sim) %>%    # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim", x="days")
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
x_sim <- real_data_alive$individual
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = x_sim) %>%    # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim", x="days")
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
x_sim <- real_data_alive$species
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = x_sim) %>%    # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
x_sim <- real_data_alive$species_num
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = x_sim) %>%    # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim")
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
x_sim <- real_data_alive$days_survived
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = x_sim) %>%    # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim")
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = x_sim) %>% # combine priors and x's
distinct(sim, days_survived, a,  b, lambda) %>%
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = x_sim) %>% # combine priors and x's
distinct(sim, days_survived, a,  b) %>%
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
days_survived_dg <- real_data_alive$days_survived
d <- real_data_alive %>% mutate("days_survived_dg" = days_survived_dg)
View(real_data_alive)
d <- prior_sim %>% mutate("days_survived_dg" = days_survived_dg)
d <- real_data_alive %>% mutate("days_survived_dg" = days_survived_dg)
d <- real_data_alive %>% mutate("days_survived_dg" == days_survived_dg)
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
days_survived_dg <- real_data_alive$days_survived
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = x_sim) %>% # combine priors and x's
distinct(sim, days_survived, a,  b) %>%
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
d <- real_data_alive %>% mutate("days" = days_survived_dg)
d <- real_data_alive %>% mutate("days" = if_else(days_survived_dg))
View(real_data_alive)
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = x_sim) %>% # combine priors and x's
distinct(sim, a,  b) %>%
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim")
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = days_survived_dg) %>% # combine priors and x's
distinct(sim, days_survived_dg, a,  b) %>%
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_sim <- tibble(a = rnorm(N, 0.25, 0.15),
b = rnorm(N, 0.5, 0.25),
sigma = rexp(N, 1),
sim = 1:N) %>%
mutate("days_survived_sim" = real_data_alive$days_survived)
prior_sim <- tibble(a = rnorm(N, 0.25, 0.15),
b = rnorm(N, 0.5, 0.25),
sigma = rexp(N, 1),
sim = 1:N)
prior_sim <- tibble(a = rnorm(N, 0.25, 0.15),
b = rnorm(N, 0.5, 0.25),
sigma = rexp(N, 1),
sim = 1:N) %>% view()
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
days_survived_dg <- real_data_alive$days_survived
d <- real_data_alive %>% mutate("days" = days_survived_dg)
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
days_survived_dg <- real_data_alive$days_survived
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = days_survived_dg) %>% # combine priors and x's
distinct(sim, days_survived_dg, a,  b) %>%
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = days_survived_dg) %>% # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim")
library(scales)
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim")+
scale_y_log10()
prior_sim <- tibble(a = rnorm(N, 0.05, 0.05),
b = rnorm(N, 0.05, 0.05),
sigma = rexp(N, 0.5),
sim = 1:N) %>% view()
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
days_survived_dg <- real_data_alive$days_survived
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = days_survived_dg) %>% # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim")+
scale_y_log10()
#I am using a Poisson distribution since dates are integer values
d <- real_data_alive %>% mutate("days" = days_survived_dg)
#I am using a Poisson distribution since dates are integer values
d <- real_data_alive %>% mutate("days" = days_survived)
#Cutting the data frame down so my computer doesn't crash and ruin my life
alive_data_useme <- alive_data[, c("individual", "species_num",
"species", "days_survived", "treatment")]
View(alive_data)
#Cutting the data frame down so my computer doesn't crash and ruin my life
alive_data_useme <- alive_data[, c("individual", "species_num",
"species", "days_survived", "treatment_group")]
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>% view()
View(alive_data)
View(alive_data_useme)
alive_data_useme[alive_data_useme$treatment_group == "control",]$treatment_group = 0
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
alive_data_useme[alive_data_useme$treatment_group == "10",]$treatment_group = 10 %>%
alive_data_useme[alive_data_useme$treatment_group == "100",]$treatment_group = 100 %>%
alive_data_useme[alive_data_useme$treatment_group == "1000",]$treatment_group = 1000 %>%
alive_data_useme[alive_data_useme$treatment_group == "control",]$treatment_group = 0
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
alive_data_useme[alive_data_useme$treatment_group = "10",]$treatment_group = 10 %>%
alive_data_useme[alive_data_useme$treatment_group = "10",] <- 10
alive_data_useme[alive_data_useme$treatment_group == "10",] <- 10
alive_data_useme[alive_data_useme$treatment_group == 10,] <- 10
alive_data_useme[alive_data_useme$treatment_group == "control",] <-  0
alive_data_useme[alive_data_useme$treatment_group == "control"] <-  0
alive_data_useme$treatment_group[alive_data_useme$treatment_group == "control"] <-  0
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),]
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
view()
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
treatment_dg <- real_data_alive$treatment_group
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = treatment_dg) %>% # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
treatment_dg <- real_data_alive$treatment_group %>% view()
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
treatment_dg <- real_data_alive$treatment_group
treatment_dg
d <- real_data_alive %>% mutate("treatment_sim" = treatment_dg)
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = treatment_dg) %>% # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
as.numeric(as.character(alive_data_useme$treatment_group)) %>%
view()
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
as.factor(as.character(alive_data_useme$treatment_group)) %>%
view()
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
as.numeric(as.character(alive_data_useme$treatment_group)) %>%
view()
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
as.numeric(unlist(alive_data_useme$treatment_group)) %>%
view()
treatment_dg <- list(alive_data_useme$treatment_group)
as.numeric(unlist(treatment_dg))
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
view()
treatment_dg <- as.numeric(unlist(treatment_dg))
treatment_dg_list <- list(alive_data_useme$treatment_group)
treatment_dg <- as.numeric(unlist(treatment_dg_list))
alive_data_useme <- alive_data_useme %>% mutate("treatment_dg" = treatment_dg)
treatment_dg <- as.numeric(unlist(treatment_dg_list))
treatment_dg_list <- list(alive_data_useme$treatment_group)
View(data_longer)
View(treatment_dg_list)
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
view()
transform(real_data_alive, treatment_group=as.numeric(treatment_group))
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
transform(real_data_alive, treatment_group=as.numeric(treatment_group)) %>%
view()
transform(real_data_alive, treatment_group=as.numeric(treatment_group))
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
view()
#I am using a Poisson distribution since dates are integer values
d <- real_data_alive %>% mutate("days" = days_survived)
get_prior(days_survived ~ length_s_dg,
data = d,
family = Gamma(link="log"))
N=1000 #Number of simulations
N=1000 #Number of simulations
prior_sim <- tibble(a = rnorm(N, 0.05, 0.05),
b = rnorm(N, 0.05, 0.05),
sigma = rexp(N, 0.5),
sim = 1:N)
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
treatment_dg <- real_data_alive$treatment_group
d <- real_data_alive %>% mutate("treatment_sim" = treatment_dg)
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = treatment_dg) %>% # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
treatment_dg <- real_data_alive$treatment_group
d <- real_data_alive %>% mutate("treatment_sim" = treatment_dg)
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = treatment_dg) %>% # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
treatment_dg <- real_data_alive$treatment_group
treatment_dg
as.numeric(treatment_dg)
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = treatment_dg) %>% # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
transform(treatment_group=as.numeric(treatment_group))
#Okay really use this one!
real_data_alive <- alive_data_useme[!duplicated(alive_data_useme$individual),] %>%
transform(treatment_group=as.numeric(treatment_group)) %>%
view()
N=1000 #Number of simulations
prior_sim <- tibble(a = rnorm(N, 0.05, 0.05),
b = rnorm(N, 0.05, 0.05),
sigma = rexp(N, 0.5),
sim = 1:N)
# data (only the x values, since we're simulating y and mu and pretending we don't have them yet)
treatment_dg <- real_data_alive$treatment_group
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = treatment_dg) %>% # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim")+
scale_y_log10()
#I am using a Poisson distribution since dates are integer values
d <- real_data_alive %>% mutate("days" = days_survived)
get_prior(days_survived ~ treatment_dg,
data = d,
family = Gamma(link="log"))
get_prior(days_survived ~ treatment_dg,
data = real_data_alive,
family = Poisson(link="log"))
library(readr)
library(brms)
library(tidyverse)
library(rethinking)
library(janitor)
library(scales)
get_prior(days_survived ~ treatment_dg,
data = real_data_alive,
family = Poisson(link="log"))
?Gamma
get_prior(days_survived ~ treatment_dg,
data = real_data_alive,
family = poisson(link="log"))
get_prior(days_survived ~ treatment_dg,
data = d,
family = poisson(link="log"))
d <- real_data_alive %>% mutate("treatment_sim" = treatment_dg)
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = treatment_sim) %>% # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
# combine and simulate
prior_and_x_1 <- prior_sim %>% expand_grid(x_sim = treatment_dg) %>% # combine priors and x's
mutate(lambda = exp(a + b*x_sim),                         # simulate regressions
y = rpois(nrow(.), lambda=lambda))   # simulate data
prior_and_x_1 %>%
ggplot(aes(x = x_sim, y = lambda, group = sim)) +
geom_line() +
geom_point(aes(y = lambda)) +
labs(y = "sim")+
scale_y_log10()
#I am using a Poisson distribution since dates are integer values
d <- real_data_alive %>% mutate("days" = days_survived)
get_prior(days_survived ~ treatment_dg,
data = d,
family = poisson(link="log"))
get_prior(days_survived ~ treatment_sim,
data = d,
family = poisson(link="log"))
#I am using a Poisson distribution since dates are integer values
d <- d %>% mutate("days" = days_survived)
get_prior(days_survived ~ treatment_sim,
data = d,
family = poisson(link="log"))
d <- real_data_alive %>% mutate("treatment_sim" = treatment_dg)
View(d)
get_prior(days ~ treatment_sim,
data = d,
family = poisson(link="log"))
#I am using a Poisson distribution since dates are integer values
d <- d %>% mutate("days" = days_survived)
get_prior(days ~ treatment_sim,
data = d,
family = poisson(link="log"))
bsr_brm_dg <- brm(days ~ treatment_sim,
data = d,
family = poisson(link="log"),
prior = c(prior(normal(0.05, 0.05), class = "Intercept"),
prior(normal(0.05, 0.05), class = "b", coef="treatment_sim"),
prior(exponential(0.5), class="shape")),
cores = 1, chains = 1, iter = 1000,
sample_prior = "yes")
get_prior(days ~ treatment_sim,
data = d,
family = poisson(link="log"))
bsr_brm_dg <- brm(days ~ treatment_sim,
data = d,
family = poisson(link="log"),
prior = c(prior(normal(0.05, 0.05), class = "Intercept"),
prior(normal(0.05, 0.05), class = "b", coef="treatment_sim"),
prior(exponential(0.5), class="b")),
cores = 1, chains = 1, iter = 1000,
sample_prior = "yes")
bsr_brm_dg
plot(conditional_effects(bsr_brm_dg), points = T)
posteriors_bsr_brm_dg <- as_draws_df(bsr_brm_dg) %>% as_tibble() %>%
mutate(mu = exp(b_Intercept),
mu_prior = exp(prior_Intercept))
ggplot(posteriors_bsr_brm_dg %>% filter(.draw <=1000), aes(x=b_length_s_dg, y=mu_prior)) +
geom_point()
posteriors_bsr_brm_dg <- as_draws_df(bsr_brm_dg) %>% as_tibble() %>%
mutate(lambda = exp(b_Intercept),
lambda_prior = exp(prior_Intercept))
ggplot(posteriors_bsr_brm_dg %>% filter(.draw <=1000), aes(x=b_treatment_sim, y=lambda_prior)) +
geom_point()
View(d)
